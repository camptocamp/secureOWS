
Connected = Connect\u00E9

Connecting = Connection en cours...

ConnectionManager.ConnectionError = Connection error 
ConnectionManager.IdleServer      = Server idle
ConnectionManager.connectionError = Error during connection

ConnectionParameters.MalformedURL             = Le param\u00E8tre du serveur est un URL invalide.
ConnectionParameters.PasswordRequiresUsername = Le nom d'utilisateur pour le proxy est requis si le mot de passe du proxy est renseign\u00E9
ConnectionParameters.UserRequiresHost         = L'h\u00F4te du proxy est requis lorsque le nom d'utilisateur pour le proxy est renseign\u00E9.
ConnectionParameters.bothHostAndPort          = Soit l'h\u00F4te et le port du proxy sont sp\u00E9cifi\u00E9s, soit aucun des deux.
ConnectionParameters.userRequired             = Le nom d'utilisateur est recquis.

DevLogLevelParamter.badLevel = Ne correspond pas \u00E0 un niveau de log pr\u00E9vu: {0}

Error = Erreur:

HeadlessRunning = Status = FONCTIONNE\n\u0009 Ecoute {0}

Invalid_URL = URL non valide

LogConfigurationParameter.cantRead = Le fichier de configuration des logs ne peut pas \u00EAtre lu.

OWSHeadlessClient.Error          = ATTENTION: une erreur est survenue.\nMessage d'erreur: {0}
OWSHeadlessClient.Prox_Unauth    = L'authentification au proxy a \u00E9chou\u00E9: v\u00E9rifiez le nom d'utilisateur et le mot de passe
OWSHeadlessClient.Unauthorized   = L'authentification a \u00E9chou\u00E9: v\u00E9rifiez le nom d'utilisateur et le mot de passe
OWSHeadlessClient.headlessStatus = Statut = {0}
OWSHeadlessClient.usage          = {0}\nUtilisation: java -jar owsproxyclient-<VERSION>.jar [options] username[:password] url \n \navec les options suivantes:\n\u0009-h              affiche cette page d'aide \n\u0009-proxyHost      l'url du proxy \u00E0 utiliser \n\u0009-proxyPort      le port d'\u00E9coute du proxy \n\u0009-proxyUser      le nom d'utilisateur et le mot de passe pour le  \n\u0009\u0009\u0009proxy selon la forme: username[:password] \n\noptions avanc\u00E9es:  \n\u0009-userLogFile    sp\u00E9cifie le nom du fichier de log utilisateur \n\u0009\u0009\u0009Les logs utilisateur sont con\u00E7us pour fournir des informations utiles\n\u0009\u0009\u0009aux utilisateurs du client Secure OWS\n\u0009-devLogLevel    d\u00E9fini la granularit\u00E9 des messages de debug \n\u0009\u0009\u0009utiles aux d\u00E9veloppeurs de Secure OWS pour r\u00E9soudre \n\u0009\u0009\u0009des probl\u00E8mes li\u00E9s \u00E0 l'application\n\u0009\u0009\u0009les options incluent: SEVERE, WARNING, INFO, FINE, FINER, FINEST, ALL \n\u0009-devLogFile     sp\u00E9cifie le nom du fichier de log d\u00E9veloppeur\n \u0009-logConf        sp\u00E9cifie le nom du fichier avec les informations \n\u0009\u0009\u0009de configuration des logs. Voir la documentation du \n \u0009\u0009\u0009framework java.util.logging sur la mani\u00E8re d'\u00E9crire \n \u0009\u0009\u0009la configuration dans ce fichier. Pour un mod\u00E8le on peut\n \u0009\u0009\u0009se baser sur le fichier logging.properties dans le r\u00E9pertoire\n \u0009\u0009\u0009Java Runtime lib
OWSHeadlessClient.wrongParams    = Deux ou trois arguments sont obligatoires

OWSLogHandler.defaultLog = secureows{0}.log

OWSProxy_not_connected = OWSProxy non connect\u00E9

ProxyPortParameter.portNotInteger = Le num\u00E9ro de port doit \u00EAtre un nombre entier.

ProxyUserParameter.illegalArg = Ni le nom d'utilisateur ni le mot de passe ne peuvent contenir ":".

Proxy_Auth = L'authentification au proxy a \u00E9chou\u00E9, v\u00E9rifiez le nom d'utilisateur et le mot de passe
refus\u00E9e, v\u00E9rifiez le nom d'utilisateur et le mot de passe

cantCreateFile = {0}: la cr\u00E9ation du fichier a \u00E9chou\u00E9

# Need translated

UIConnectionManager.missingKeystore = Missing Keystore
UIConnectionManager.no              = No
UIConnectionManager.warningMsg      = The defined keystore: {0} does not exist\nDo you want to create it?
UIConnectionManager.yes             = Yes

Unauthorized = Authentification 
AuthSSLProtocolSocketFactory.incorrectPassword = Password to keystore seems to be incorrect

AuthSSLX509TrustManager.Issuer      = \  Issuer: 
AuthSSLX509TrustManager.algorithm   = \  Signature Algorithm: 
AuthSSLX509TrustManager.certificate = \ Server certificate 
AuthSSLX509TrustManager.subject     = \  Subject DN: 
AuthSSLX509TrustManager.validFrom   = \  Valid from: 
AuthSSLX509TrustManager.validUntil  = \  Valid until: 
AuthSSLX509TrustManager.notTrusted=Certificate could not be validated

OWSClient.noKeystore      = Keystore does not exist
OWSClient.requirePassword = Keystore password is required
OWSClient.wrongPassword   = Password is incorrect
