
AuthSSLProtocolSocketFactory.incorrectPassword = Password to keystore seems to be incorrect

AuthSSLX509TrustManager.Issuer      = \  Issuer: 
AuthSSLX509TrustManager.algorithm   = \  Signature Algorithm: 
AuthSSLX509TrustManager.certificate = \ Server certificate 
AuthSSLX509TrustManager.subject     = \  Subject DN: 
AuthSSLX509TrustManager.validFrom   = \  Valid from: 
AuthSSLX509TrustManager.validUntil  = \  Valid until: 
AuthSSLX509TrustManager.notTrusted=Certificate could not be validated

Connected = Connected

Connecting = Connecting...

ConnectionManager.ConnectionError = Connection error 
ConnectionManager.IdleServer      = Server idle
ConnectionManager.connectionError = Error during connection

ConnectionParameters.MalformedURL             = The Server parameter is an Invalid URL
ConnectionParameters.PasswordRequiresUsername = The Proxy Username must be specified if the Proxy Password is specificed
ConnectionParameters.UserRequiresHost         = The Proxy Host must be specified if the Proxy Username is specificed
ConnectionParameters.bothHostAndPort          = Either both proxyHost and proxyPort are required or neither
ConnectionParameters.userRequired             = username is required

DevLogLevelParamter.badLevel = Not a legal logging level: {0}

Error = Error:

HeadlessRunning = Status = RUNNING\n\u0009 Listening to {0}

Invalid_URL = Invalid URL

LogConfigurationParameter.cantRead = Logging configuration file cannot be read

OWSClient.noKeystore      = Keystore does not exist
OWSClient.requirePassword = Keystore password is required
OWSClient.wrongPassword   = Password is incorrect

OWSHeadlessClient.Error          = WARNING: An error just occurred.\nError Message: {0}
OWSHeadlessClient.Prox_Unauth    = Proxy Authentication Failed: Verify the proxy username and password
OWSHeadlessClient.Unauthorized   = Authentication Failed: Verify the username and password
OWSHeadlessClient.headlessStatus = Status = {0}
OWSHeadlessClient.usage          = {0}\nUsage: java -jar owsproxyclient-<VERSION>.jar [options] username[:password] url \n \nwhere options include:\n\u0009-h                  print this help information \n\u0009-proxyHost          the url of the proxy to use \n\u0009-proxyPort          the port that the proxy listens on \n\u0009-proxyUser          The username and password for the  \n\u0009\u0009\u0009    proxy in the form: username[:password] \n\u0009-keystore           the path and password for the keystore  \n\u0009\u0009\u0009    in the form: path:password \n\u0009-readonlyKeystore   indicates the keystore is readonly  \n\nadvanced options:  \n\u0009-userLogFile    Specifies the file for writing the user logs.  \n\u0009\u0009\u0009User logs are designed to provide useful information\n\u0009\u0009\u0009for users of the Secure OWS client\n\u0009-devLogLevel    Sets the granularity of the debug messages \n\u0009\u0009\u0009that the secureows developers can use to debug \n\u0009\u0009\u0009problems with the application.\n\u0009\u0009\u0009options include: SEVERE, WARNING, INFO, FINE, FINER, FINEST, ALL \n\u0009-devLogFile     Specifies the file for writing the developer debug logs\n \u0009-logConf        Specifies a file with logger configuration information.  See the \n \u0009\u0009\u0009documentation of the java.util.logging framework for information\n \u0009\u0009\u0009on how to write this file.  For a template one can look at the\n \u0009\u0009\u0009logging.properties file in the Java Runtime lib folder
OWSHeadlessClient.wrongParams    = Two or three arguments are required

OWSLogHandler.defaultLog = secureows{0}.log

OWSProxy_not_connected = OWSProxy not connected

ProxyPortParameter.portNotInteger = The port number must be an integer

ProxyUserParameter.illegalArg = Neither password nor username can have a : in them

Proxy_Auth = Proxy authentication failed, check your username and password

UIConnectionManager.missingKeystore = Missing Keystore
UIConnectionManager.no              = No
UIConnectionManager.warningMsg      = The defined keystore: {0} does not exist\nDo you want to create it?
UIConnectionManager.yes             = Yes

Unauthorized = Unauthorized, check your username and password

cantCreateFile = {0} cannot be created as a file
