/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ProxySettingsPanel.java
 *
 * Created on Nov 4, 2008, 5:40:36 PM
 */

package owsproxyclient.settings;

/**
 * Panel for configuring proxy settings
 * 
 * @author jeichar
 */
public class ProxySettingsPanel extends javax.swing.JPanel implements SettingsPanel {
    private SettingsDialog _owner;

    /** Creates new form ProxySettingsPanel */
    public ProxySettingsPanel(SettingsDialog owner) {
        _owner = owner;

    }

    public void init(){
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        useAuthentication = new javax.swing.JCheckBox();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("owsproxyclient/translations"); // NOI18N
        jLabel1.setText(bundle.getString("URL")); // NOI18N

        jLabel2.setText(bundle.getString("Port")); // NOI18N

        port.setText("3128");
        port.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portActionPerformed(evt);
            }
        });
        port.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                portKeyReleased(evt);
            }
        });

        url.setText("http://");
        url.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                urlActionPerformed(evt);
            }
        });

        useAuthentication.setText(bundle.getString("Use_Authentication")); // NOI18N
        useAuthentication.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                useAuthenticationStateChanged(evt);
            }
        });

        usernameLabel.setText(bundle.getString("User_name")); // NOI18N
        usernameLabel.setEnabled(false);

        passwordLabel.setText(bundle.getString("Password")); // NOI18N
        passwordLabel.setEnabled(false);

        password.setEnabled(false);

        username.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jLabel3.setText("Proxy Settings");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(port, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                            .addComponent(url, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)))
                    .addComponent(useAuthentication)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usernameLabel)
                            .addComponent(passwordLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(password)
                            .addComponent(username, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)))
                    .addComponent(jLabel3))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(url, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(useAuthentication)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameLabel)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void portKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_portKeyReleased
        _owner.updateButtons();
}//GEN-LAST:event_portKeyReleased

    private String validatePassword() {
        if(useAuthentication.isSelected() && username.getText().trim().isEmpty()){
            return "No proxy username";
        }
        return null;
    }

    private String validatePort() {
        try {
            final String text = port.getText().trim();
            if( text.length()>0 ){
                Integer.parseInt(text);
            }
            return null;
        } catch (NumberFormatException exception) {
            return java.util.ResourceBundle.getBundle("owsproxyclient/translations").getString("portError");
        }
    }
        
    private void useAuthenticationStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_useAuthenticationStateChanged
        final boolean enabled = useAuthentication.isSelected();
        username.setEnabled(enabled);
        usernameLabel.setEnabled(enabled);
        password.setEnabled(enabled);
        passwordLabel.setEnabled(enabled);
    }//GEN-LAST:event_useAuthenticationStateChanged

    private void urlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_urlActionPerformed
        _owner.updateButtons();
    }//GEN-LAST:event_urlActionPerformed

    private void portActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_portActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    public final javax.swing.JPasswordField password = new javax.swing.JPasswordField();
    private javax.swing.JLabel passwordLabel;
    public final javax.swing.JTextField port = new javax.swing.JTextField();
    public final javax.swing.JTextField url = new javax.swing.JTextField();
    public javax.swing.JCheckBox useAuthentication;
    public final javax.swing.JTextField username = new javax.swing.JTextField();
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables

    public Object getState() {
        return new ProxyState( url.getText(), port.getText(), useAuthentication.isSelected(), username.getText(), password.getPassword());
    }

    public void setState(Object state) {
        ProxyState pState = (ProxyState) state;
        url.setText(pState.url);
        port.setText(pState.port);
        useAuthentication.setSelected(pState.useAuthentication);
        if( pState.useAuthentication){
            username.setText(pState.username);
            password.setText(new String(pState.password));
        }
    }


    public String getErrorMessage() {
        String portMsg = validatePort();
        if(portMsg!=null){
            return portMsg;
        }
        String pwdMsg = validatePassword();
        if(pwdMsg!=null){
            return pwdMsg;
        }
        return null;
    }


}
